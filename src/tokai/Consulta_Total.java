/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tokai;

import java.sql.*;
import javax.swing.JTable;

/**
 *
 * @author hinse
 */
public class Consulta_Total extends javax.swing.JInternalFrame {

    /**
     * Creates new form Consulta_Total
     */
    public Consulta_Total() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jAlmacen = new javax.swing.JButton();
        jEmpleados = new javax.swing.JButton();
        jSesion = new javax.swing.JButton();
        jSucursales = new javax.swing.JButton();
        jProveedor = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Consultas");

        jAlmacen.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jAlmacen.setText("Álmacen");
        jAlmacen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAlmacenActionPerformed(evt);
            }
        });

        jEmpleados.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jEmpleados.setText("Empleados");
        jEmpleados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jEmpleadosActionPerformed(evt);
            }
        });

        jSesion.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jSesion.setText("Sesión");
        jSesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSesionActionPerformed(evt);
            }
        });

        jSucursales.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jSucursales.setText("Sucursales");
        jSucursales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSucursalesActionPerformed(evt);
            }
        });

        jProveedor.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jProveedor.setText("Proveedor");
        jProveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jProveedorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 838, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jAlmacen)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jEmpleados)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSesion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSucursales)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jProveedor)
                .addGap(197, 197, 197))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jSucursales)
                    .addComponent(jSesion)
                    .addComponent(jEmpleados)
                    .addComponent(jAlmacen)
                    .addComponent(jProveedor))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jAlmacenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAlmacenActionPerformed
        Connection B1 = null;
        
        try{
            B1 = Conexion.conexion("SQL", "sa", "180926", "TOKAI");
            
            if(B1 != null){
                Statement st = B1.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,
                ResultSet.CONCUR_READ_ONLY);
                ResultSet rs = st.executeQuery("select SKU, RFC_Proveedor, Producto, Fecha_Entrada, Cantidad, Fecha_Caducidad,"
                        + "Empleado_Solicitante from Almacen_Entrada");
                if(rs.next()){
                    //Obtiene el numero de columnas
                    int Columnas = rs.getMetaData().getColumnCount();
                    String Titulos[] = new String[Columnas];
                    //Se manda el apuntador al final de la tabla
                    rs.last();
                    int Filas = rs.getRow();
                    for(int i = 0; i < Columnas; i++){
                        Titulos[i] = rs.getMetaData().getColumnName(i + 1);
                    }
                    String Datos[][] = new String[Filas][Columnas];
                    //Regresamos el apuntador al inicio
                    rs.first();
                    for(int f = 0; f < Filas; f++){
                        for(int c = 0; c < Columnas; c++){
                            Datos[f][c] = rs.getString(c + 1);
                        }
                        rs.next();
                    }
                    //Este codigo es indispensable para hacer visible la tabla
                    jTable1 = new JTable(Datos, Titulos);
                    jScrollPane1.setViewportView(jTable1);
                }else{
                    System.out.println("No Hay Datos");
                }
            }else{
                System.out.println("Error");
            }
        }catch(Exception e){
            System.out.println("Bases No Conectadas: " + e);
        }
    }//GEN-LAST:event_jAlmacenActionPerformed

    private void jEmpleadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jEmpleadosActionPerformed
        // B1 = SQL //
        Connection B1 = null;
        // B2 = MySQL //
        Connection B2 = null;
        
        try{
            B1 = Conexion.conexion("SQL", "sa", "180926", "TOKAI");
            B2 = Conexion.conexion("MySQL", "root", "1310HnBt1809", "TOKAI");
        
            String Titulo[] = new String[2];
            String Datos[][] = new String[2][2];
            
            if(B1 != null && B2 != null){
                Statement BD1 = B1.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
                Statement BD2 = B2.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
                ResultSet RS1 = BD1.executeQuery("select * from Empleados");
                ResultSet RS2 = BD2.executeQuery("select * from Empleados");
                if(RS1.next() && RS2.next()){
                    int Columnas1 = RS1.getMetaData().getColumnCount();
                    int Columnas2 = RS2.getMetaData().getColumnCount();
                    int Columnas = (Columnas1 + Columnas2) - 1;
                    Titulo = new String[Columnas];
                    RS1.last();
                    int Filas1 = RS1.getRow();
                    RS2.last();
                    int Filas2 = RS2.getRow();
                    if(Filas1 == Filas2){
                        Datos = new String[Filas2][Columnas];
                        int conC1 = 0;
                        for(int i = 0; i < Columnas1; i++){
                            Titulo[conC1++] = RS1.getMetaData().getColumnName(i+1);
                        }for(int i = 1; i < Columnas2; i++){
                            Titulo[conC1++] = RS2.getMetaData().getColumnName(i+1);
                        }
                    RS1.first();
                    RS2.first();
                    int conC2 = Columnas1 - 1;
                    for(int a = 0; a < Filas1; a++){
                        for(int b = 0; b < Columnas1; b++){
                            Datos[a][b] = RS1.getString(b+1);
                        }
                        RS1.next();
                        for(int c = 1; c < Columnas2; c++){
                            Datos[a][conC2+c] = RS2.getString(c+1);
                        }
                        RS2.next();
                    }
                    jTable1 = new JTable(Datos, Titulo);
                    jScrollPane1.setViewportView(jTable1);
                    }else{
                        System.out.println("No Hay Datos");
                    }
                }
            }else{
                System.out.println("No Existen Datos");
            }
        }catch(Exception e){
            System.out.println("Base No Conectada: " + e);
        }
    }//GEN-LAST:event_jEmpleadosActionPerformed

    private void jSesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSesionActionPerformed
//        // B1 = SQL //
//        Connection B1 = null;
//        
//        try{
//            B1 = Conexion.conexion("SQL", "sa", "180926", "TOKAI");
//            
//            if(B1 != null){
//                Statement st = B1.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,
//                ResultSet.CONCUR_READ_ONLY);
//                ResultSet rs = st.executeQuery("select * from Acceso");
//                if(rs.next()){
//                    //Obtiene el numero de columnas
//                    int Columnas = rs.getMetaData().getColumnCount();
//                    String Titulos[] = new String[Columnas];
//                    //Se manda el apuntador al final de la tabla
//                    rs.last();
//                    int Filas = rs.getRow();
//                    for(int i = 0; i < Columnas; i++){
//                        Titulos[i] = rs.getMetaData().getColumnName(i + 1);
//                    }
//                    String Datos[][] = new String[Filas][Columnas];
//                    //Regresamos el apuntador al inicio
//                    rs.first();
//                    for(int f = 0; f < Filas; f++){
//                        for(int c = 0; c < Columnas; c++){
//                            Datos[f][c] = rs.getString(c + 1);
//                        }
//                        rs.next();
//                    }
//                    //Este codigo es indispensable para hacer visible la tabla
//                    jTable1 = new JTable(Datos, Titulos);
//                    jScrollPane1.setViewportView(jTable1);
//                }else{
//                    System.out.println("No Hay Datos");
//                }
//            }else{
//                System.out.println("Error");
//            }
//        }catch(Exception e){
//            System.out.println("Bases No Conectadas: " + e);
//        }

// B1 = SQL //
        Connection B1 = null;
        // B2 = MySQL //
        Connection B2 = null;
        
        try{
            B1 = Conexion.conexion("SQL", "sa", "180926", "TOKAI");
            B2 = Conexion.conexion("SQL", "sa", "180926", "TOKAI");
        
            String Titulo[] = new String[2];
            String Datos[][] = new String[2][2];
            
            if(B1 != null && B2 != null){
                Statement BD1 = B1.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
                Statement BD2 = B2.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
                ResultSet RS1 = BD1.executeQuery("select Nombre, RFC_Empleado from Empleados");
                ResultSet RS2 = BD2.executeQuery("select * from Acceso");
                
                if(RS1.next() && RS2.next()){
                    int Columnas1 = RS1.getMetaData().getColumnCount();
                    int Columnas2 = RS2.getMetaData().getColumnCount();
                    int Columnas = (Columnas1 + Columnas2) - 1;
                    Titulo = new String[Columnas];
                    RS1.last();
                    int Filas1 = RS1.getRow();
                    RS2.last();
                    int Filas2 = RS2.getRow();
                    if(Filas1 == Filas2){
                        Datos = new String[Filas2][Columnas];
                        int conC1 = 0;
                        for(int i = 0; i < Columnas1; i++){
                            Titulo[conC1++] = RS1.getMetaData().getColumnName(i+1);
                        }for(int i = 1; i < Columnas2; i++){
                            Titulo[conC1++] = RS2.getMetaData().getColumnName(i+1);
                        }
                    RS1.first();
                    RS2.first();
                    int conC2 = Columnas1 - 1;
                    for(int a = 0; a < Filas1; a++){
                        for(int b = 0; b < Columnas1; b++){
                            Datos[a][b] = RS1.getString(b+1);
                        }
                        RS1.next();
                        for(int c = 1; c < Columnas2; c++){
                            Datos[a][conC2+c] = RS2.getString(c+1);
                        }
                        RS2.next();
                    }
                    jTable1 = new JTable(Datos, Titulo);
                    jScrollPane1.setViewportView(jTable1);
                    }else{
                        System.out.println("No Hay Datos");
                    }
                }
            }else{
                System.out.println("No Existen Datos");
            }
        }catch(Exception e){
            System.out.println("Base No Conectada: " + e);
        }
    }//GEN-LAST:event_jSesionActionPerformed

    private void jSucursalesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSucursalesActionPerformed
        // B2 = MySQL //
        Connection B2 = null;
        
        try{
            B2 = Conexion.conexion("MySQL", "root", "1310HnBt1809", "TOKAI");
            
            if(B2 != null){
                Statement st = B2.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,
                ResultSet.CONCUR_READ_ONLY);
                ResultSet rs = st.executeQuery("select * from Sucursal");
                if(rs.next()){
                    //Obtiene el numero de columnas
                    int Columnas = rs.getMetaData().getColumnCount();
                    String Titulos[] = new String[Columnas];
                    //Se manda el apuntador al final de la tabla
                    rs.last();
                    int Filas = rs.getRow();
                    for(int i = 0; i < Columnas; i++){
                        Titulos[i] = rs.getMetaData().getColumnName(i + 1);
                    }
                    String Datos[][] = new String[Filas][Columnas];
                    //Regresamos el apuntador al inicio
                    rs.first();
                    for(int f = 0; f < Filas; f++){
                        for(int c = 0; c < Columnas; c++){
                            Datos[f][c] = rs.getString(c + 1);
                        }
                        rs.next();
                    }
                    //Este codigo es indispensable para hacer visible la tabla
                    jTable1 = new JTable(Datos, Titulos);
                    jScrollPane1.setViewportView(jTable1);
                }else{
                    System.out.println("No Hay Datos");
                }
            }else{
                System.out.println("Error");
            }
        }catch(Exception e){
            System.out.println("Error: " + e);
        }
    }//GEN-LAST:event_jSucursalesActionPerformed

    private void jProveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jProveedorActionPerformed
        // B1 = SQL //
        Connection B1 = null;
        // B2 = MySQL //
        Connection B2 = null;
        
        try{
            B1 = Conexion.conexion("SQL", "sa", "180926", "TOKAI");
            B2 = Conexion.conexion("MySQL", "root", "1310HnBt1809", "TOKAI");
        
            String Titulo[] = new String[2];
            String Datos[][] = new String[2][2];
            
            if(B1 != null && B2 != null){
                Statement BD1 = B1.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
                Statement BD2 = B2.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
                ResultSet RS1 = BD1.executeQuery("select * from Proveedor");
                ResultSet RS2 = BD2.executeQuery("select * from Proveedor");
                if(RS1.next() && RS2.next()){
                    int Columnas1 = RS1.getMetaData().getColumnCount();
                    int Columnas2 = RS2.getMetaData().getColumnCount();
                    int Columnas = (Columnas1 + Columnas2) - 1;
                    Titulo = new String[Columnas];
                    RS1.last();
                    int Filas1 = RS1.getRow();
                    RS2.last();
                    int Filas2 = RS2.getRow();
                    if(Filas1 == Filas2){
                        Datos = new String[Filas2][Columnas];
                        int conC1 = 0;
                        for(int i = 0; i < Columnas1; i++){
                            Titulo[conC1++] = RS1.getMetaData().getColumnName(i+1);
                        }for(int i = 1; i < Columnas2; i++){
                            Titulo[conC1++] = RS2.getMetaData().getColumnName(i+1);
                        }
                    RS1.first();
                    RS2.first();
                    int conC2 = Columnas1 - 1;
                    for(int a = 0; a < Filas1; a++){
                        for(int b = 0; b < Columnas1; b++){
                            Datos[a][b] = RS1.getString(b+1);
                        }
                        RS1.next();
                        for(int c = 1; c < Columnas2; c++){
                            Datos[a][conC2+c] = RS2.getString(c+1);
                        }
                        RS2.next();
                    }
                    jTable1 = new JTable(Datos, Titulo);
                    jScrollPane1.setViewportView(jTable1);
                    }else{
                        System.out.println("Error");
                    }
                }
            }else{
                System.out.println("Error");
            }
        }catch(Exception e){
            System.out.println("Error: " + e);
        }
    }//GEN-LAST:event_jProveedorActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jAlmacen;
    private javax.swing.JButton jEmpleados;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton jProveedor;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jSesion;
    private javax.swing.JButton jSucursales;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
